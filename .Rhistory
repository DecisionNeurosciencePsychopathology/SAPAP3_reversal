library(readr)
install.packages("readr")
library("readr", lib.loc="~/R/win-library/3.3")
library("lme4", lib.loc="~/R/win-library/3.3")
install.packages("ggplot2")
library("dplyr", lib.loc="~/R/win-library/3.3")
install.packages("tidyr")
install.packages("psych")
library("gdata", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
install.packages("R.matlab")
install.packages("xtable")
install.packages("Hmisc")
library("nnet", lib.loc="C:/Program Files/R/R-3.3.3/library")
library("reshape2", lib.loc="~/R/win-library/3.3")
install.packages("ggbiplot")
install.packages("corrplot")
install.packages("lsmeans")
install.packages("factoextra")
library("ggplot2", lib.loc="~/R/win-library/3.3")
install.packages("ggfortify")
install.packages("readxl")
install.packages("linbin")
library("MASS", lib.loc="C:/Program Files/R/R-3.3.3/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.3.3/library")
library(linbin)
library(readxl)
library(readr)
library(lme4)
library(ggplot2)
library(dplyr)
library(tidyr)
library(psych)
library(gdata)
library(R.matlab)
library(xtable)
library(Hmisc)
library(nnet)
library(reshape2)
library(ggbiplot)
library(corrplot)
library(lsmeans)
library(factoextra)
library(ggfortify)
library(readxl)
library(linbin)
library(MASS)
library(lattice)
library(readr)
library(lme4)
library(ggplot2)
library(tidyr)
library(psych)
library(gdata)
library(R.matlab)
library(xtable)
library(Hmisc)
library(nnet)
library(reshape2)
library(ggbiplot)
library(corrplot)
library(lsmeans)
library(factoextra)
library(ggfortify)
library(readxl)
library(linbin)
library(MASS)
library(lattice)
library(fastICA)
library(plotly)
setwd("/Users/manninge/Documents/GitHub/SAPAP3_reversal/")
d <- read_excel("/Users/manninge/Documents/GitHub/SAPAP3_reversal/SAPAP3 cFos cohort lever press timestamp reversal day 1.xlsx")
("~/code/SAPAP3_reversal/")
View(d)
d <- read_excel("~/code/SAPAP3_reversal/SAPAP3 cFos cohort lever press timestamp reversal day 1.xlsx")
g <- read_excel("/Users/manninge/Documents/GitHub/SAPAP3_reversal/Reversal cFos cohort blind.xlsx")
g <- read_excel("~/code/SAPAP3_reversal/Reversal cFos cohort blind.xlsx")
g$id <- g$`Physical Tag`
g <- g[,2:3]
cfos <- read_csv("/Users/manninge/Documents/GitHub/SAPAP3_reversal/SAPAP3 reversal cFos density_Final mice.csv")
names(cfos)[names(cfos)=="ID"] <- "id"
names(cfos)[names(cfos)=="correct"] <- "tot_correct"
names(cfos)[names(cfos)=="incorrrect"] <- "tot_incorrect"
names(cfos)[names(cfos)=="Genotype"] <- "genotype01"
names(cfos)[names(cfos)=="NAc S"] <- "NAccS"
names(cfos)[names(cfos)=="NAc C"] <- "NAccC"
View(cfos)
just_rois <- cfos[,7:18]
feedROIcor <- cor(just_rois)
pdf("cfos correlations by regions.pdf", width=12, height=12)
corrplot(feedROIcor, cl.lim=c(0,1),
method = "circle", tl.cex = 1.5, type = "upper", tl.col = 'black',
order = "hclust", diag = FALSE,
addCoef.col="orange", addCoefasPercent = FALSE,
p.mat = 1-feedROIcor, sig.level=0.5, insig = "blank")
dev.off()
cfos.pca = prcomp((just_rois),scale = TRUE, center = TRUE)
DS_rois <- cfos[,13:15]
DS_cfos.pca = prcomp((DS_rois),scale = TRUE, center = TRUE)
DS_cfos_pcas <- get_pca_ind(DS_cfos.pca)
cfos$val1 <- DS_cfos_pcas$coord[,1]
summary(DS_cfos.pca)
plot(DS_cfos.pca,type = 'l')
cfos_pcas <- get_pca_ind(cfos.pca)
cfos$val1 <- cfos_pcas$coord[,1]
summary(cfos.pca)
plot(cfos.pca,type = 'l')
cfos$genotype01 <- as.factor(cfos$genotype01)
ggplot(aes(x=genotype01, y=IL),data = cfos) +
geom_count()
ggplot(aes(x=genotype01, y=DMS),data = cfos) +
geom_count()
ggplot(aes(x=genotype01, y=NAccS),data = cfos) +
geom_count()
cshort <- cfos[,c(1:2,7:18)]
cshort <- as.data.frame(cshort)
t_cfos <- melt(cshort,id.vars = c("id","genotype01"))
names(t_cfos)[names(t_cfos)=="value"] <- "cfos"
names(t_cfos)[names(t_cfos)=="variable"] <- "region"
summary(cm1 <- lm(cfos ~ region*genotype01, data = t_cfos))
pdf("cfos by region and genotype.pdf", width=12, height=6)
boxplot(cfos ~ genotype01 + region, data = t_cfos, main = "cfos activity by SAPAP3 genotype (blue = WT, purple = KO) and region",
xlab = "Region", ylab = "cfos", varwidth = TRUE, col =  cm.colors(2))
dev.off()
d$id <- d$`subject ID`
d$corr <- d$`Correct lever press`
d$inc <- d$`Incorrect lever press`
d <- d[,4:6]
d[d==0] <- NA
View(d)
ids <- unique(d$id)
describe(d$corr)
describe(d$inc)
start <- 0
binsize <- 200
c <- data.frame()
for (id in ids)
{end <- max(c(max(d$inc[d$id==id]),max(na.omit(d$corr[d$id==id]))))
# end <- 12000
bins <- seq(start,end,binsize)
t=cut(d$corr[d$id==id],c(bins), labels = FALSE)
b <- table( factor(t, levels = 1:length(bins)-1))
b <- as.data.frame(b)
b$id <- id
names(b)[names(b)=="Var1"] <- "time"
names(b)[names(b)=="Freq"] <- "corr"
tinc=cut(d$inc[d$id==id],c(bins), labels = FALSE)
i <- table( factor(tinc, levels = 1:length(bins)-1))
i <- as.data.frame(i)
b$inc <- i$Freq
c <- rbind(c,b)
}
c <- c[c$time!="0",]
c$t.ord <- as.ordered(c$time)
c$t.num <- as.numeric(c$time)
plot(c$time,c$inc)
plot(c$time,c$corr)
hist(c$inc)
hist(c$corr)
length(c$inc)
ggplot(aes(x=t.num, y=corr),data = c) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) + theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Correct responses") +
stat_smooth(data=c, aes(x=t.num, y=corr), size=0.4, alpha=0.1, se=FALSE, method="loess")
ggplot( aes(x=t.num, y=inc),data = c) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) + theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Incorrect responses") +
stat_smooth(data=c, aes(x=t.num, y=inc), size=0.4, alpha=0.1, se=FALSE, method="loess")
theta.corr <- theta.ml(c$corr, mean(c$corr), 513, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
theta.inc <- theta.ml(c$inc, mean(c$inc), 513, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
summary(mcorr2 <- glm(corr ~ t.num + (1:id), family = negative.binomial(theta = theta.corr), data = c))
summary(minc1 <- glm(inc ~ t.num + (1:id), family = negative.binomial(theta = theta.corr), data = c))
c.all <- melt(c,id.vars = c("id","time","t.num","t.ord"),value.name = "response", variable.name = "type")
names(c.all)[names(c.all)=="value"] <- "response"
names(c.all)[names(c.all)=="variable"] <- "type"
View(c.all)
c.all$response <- as.numeric(c.all$response)
pdf("Response curves gam.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1), color = type),data = c.all) + theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Responses (log)") +
stat_smooth(data=c.all, aes(x=t.num, y=log(response + .1), color = type), size=2, alpha=0.2, se=TRUE, method="loess") + geom_count(position = "jitter")
dev.off()
ggplot(aes(x=t.num, y=response, color = type),data = c.all) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) +
theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Responses") +
geom_count(position = "jitter")
hdf <- merge(c,g) # horizontal data frame
ggplot(aes(x=t.num, y=corr, color = Genotype),data = hdf) + stat_smooth(size=2, alpha=0.1, method="loess", size = 1) + theme_bw(base_size=20) +
xlab("Time, 200s bins") + ylab("Correct responses") +
geom_count(position = "jitter")
ggplot( aes(x=t.num, y=inc, color = Genotype),data = hdf) + stat_smooth(size=2, alpha=0.1, method="loess",  size = 1) + theme_bw(base_size=20) +
xlab("Time, 200s bins") + ylab("Incorrect responses") +
geom_count(position = "jitter")
bdf <- merge(c.all,g)
names(cfos)[names(cfos)=="grooming time"] <- "grooming.time"
hdfc <- merge(hdf,cfos)
bdfc <- merge(bdf,cfos)
pdf("Log response curves by genotype gam.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1), color = type),data = bdf) + theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Responses (log)") +
stat_smooth(data=bdf, aes(x=t.num, y=log(response + .1), color = type), size=2, alpha=0.2, se=TRUE, method="loess") + geom_count(position = "jitter") +
facet_grid(Genotype ~ .)
dev.off()
pdf("Linear response curves by genotype gam.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=response, color = type),data = bdf) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) +
theme_bw(base_size=20) + xlab("Time, 200s bins") + ylab("Responses") +
geom_count(position = "jitter") +
facet_grid(Genotype ~ .)
dev.off()
summary(mcorrg1 <- glm(corr ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.corr), data = hdf))
summary(mincg1 <- glm(inc ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.inc), data = hdf))
summary(lmc1 <- lm(cfos$tot_correct ~ cfos$genotype01))
summary(lmi1 <- lm(cfos$tot_incorrect ~ cfos$genotype01))
summary(lmg1 <- lm(log(cfos$grooming.time) ~ cfos$genotype01))
theta.resp <- theta.ml(na.omit(c.all$response), mean(na.omit(c.all$response)), 972, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
summary(mrespg1 <- glm(response ~ 1 + t.num*type + type*Genotype +  (1:id), family = negative.binomial(theta = theta.resp), data = bdf))
car::Anova(mrespg1)
ls.respg1 <- lsmeans(mrespg1,"type", by = "Genotype")
plot(ls.respg1, type ~ response, horiz=F,ylab = "Response levels", xlab = "type")
summary(mrespg2 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + grooming.time*type + grooming.time*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg2)
summary(mrespg3 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + DLS*t.num*Genotype + DLS*type*Genotype + DLS*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg3)
summary(mrespg3full <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + DLS*t.num*Genotype*type +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg3 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + DLS*t.num*Genotype + DLS*type*Genotype + DLS*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg3)
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + mOFC*t.num*Genotype + mOFC*type*Genotype + mOFC*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg10)
lsmip(mrespg8, mOFC ~ type | Genotype , at = list(mOFC = c(400,700,1000)), ylab = "log(response rate)", xlab = "Type", type = "predicted" )
summary(mrespg8 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + mOFC*t.num*type*Genotype +   (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg8a <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + mOFC*t.num*Genotype + mOFC*type*Genotype + mOFC*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg8a)
lsmip(mrespg8, mOFC ~ type | Genotype , at = list(mOFC = c(400,700,1000)), ylab = "log(response rate)", xlab = "Type", type = "predicted" )
lsmip(mrespg3, DLS ~ type | Genotype, at = list(DLS = c(10,100,200)), ylab = "log(response rate)", xlab = "type ", type = "predicted" )
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + lOFC*t.num*Genotype + lOFC*type*Genotype + lOFC*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
hist(cfos$lOFC)
lsmip(mrespg10, lOFC ~ type | Genotype , at = list(lOFC = c(400,800,1200)), ylab = "log(response rate)", xlab = "Type", type = "predicted" )
summary(mrespg6a <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + PrL*t.num*Genotype + PrL*type*Genotype + PrL*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
lsmip(mrespg6, PrL ~ type | Genotype , at = list(PrL = c(200,400,600)), ylab = "log(response rate)", xlab = "Type ", type = "predicted" )
lsmip(mrespg6a, PrL ~ type | Genotype , at = list(PrL = c(200,400,600)), ylab = "log(response rate)", xlab = "Type ", type = "predicted" )
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + IL*t.num*Genotype + IL*type*Genotype + IL*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + DMS*t.num*Genotype + DMS*type*Genotype + DMS*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + CMS*t.num*Genotype + CMS*type*Genotype + CMS*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg10)
hist(cfos$CMS)
lsmip(mrespg10, CMS ~ type | Genotype , at = list(grooming.time = c(25,75,150)), ylab = "log(response rate)", xlab = "Type", type = "predicted" )
lsmip(mrespg10, CMS ~ type | Genotype , at = list(CMS = c(25,75,150)), ylab = "log(response rate)", xlab = "Type", type = "predicted" )
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + VMS*t.num*Genotype + VMS*type*Genotype + VMS*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg10 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccC*t.num*Genotype + NAccC*type*Genotype + NAccC*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg10)
lsmip(mrespg4D, NAccC ~ t.num | type, at = list(NAccC = c(50,150,300),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "time ", type = "predicted" )
summary(mrespg4D <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccC*t.num*Genotype + NAccC*type*Genotype + NAccC*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg4D)
lsmip(mrespg4D, NAccC ~ t.num | type, at = list(NAccC = c(50,150,300),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "time ", type = "predicted" )
lsmip(mrespg4D, NAccC ~ t.num | Genotype, at = list(NAccC = c(50,150,300),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "Genotype", type = "predicted" )
summary(mrespg4_restr <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccS*t.num*type + NAccS*t.num*Genotype + NAccS*type*Genotype + (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg4_restr)
lsmip(mrespg4D, NAccS ~ t.num | Genotype, at = list(NAccS = c(50,150,250),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "Genotype", type = "predicted" )
summary(mrespg4_restr <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccS*t.num*type + NAccS*t.num*Genotype + NAccS*type*Genotype + (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg4_restr)
lsmip(mrespg4D, NAccS ~ t.num | Genotype, at = list(NAccS = c(50,150,250),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "Genotype", type = "predicted" )
summary(mrespg4 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccS*t.num*type*Genotype + (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg4)
summary(mrespg4_restr <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccS*t.num*type + NAccS*t.num*Genotype + NAccS*type*Genotype + (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg4_restr)
lsmip(mrespg4_restr, NAccS ~ t.num | Genotype, at = list(NAccS = c(50,150,250),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "Genotype", type = "predicted" )
lsmip(mrespg4_restr, NAccS ~ Genotype | type , at = list(NAccS = c(50,150,250)), ylab = "log(response rate)", xlab = "response type ", type = "predicted" )
summary(mrespg4 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + NAccS*t.num*type*Genotype + (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg6 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + PrL*t.num*type*Genotype +   (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
summary(mrespg5 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + lOFC*t.num*type*Genotype +   (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
